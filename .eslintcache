[{"E:\\issue-reporting\\client\\src\\components\\IssueList.js":"1","E:\\issue-reporting\\client\\src\\App.js":"2","E:\\issue-reporting\\client\\src\\components\\CreateNewIssue.js":"3","E:\\issue-reporting\\client\\src\\components\\IssuesList.js":"4","E:\\issue-reporting\\client\\src\\reportWebVitals.js":"5","E:\\issue-reporting\\client\\src\\index.js":"6","E:\\issue-reporting\\client\\src\\components\\AdminsIssueList.js":"7"},{"size":17584,"mtime":1606312580046,"results":"8","hashOfConfig":"9"},{"size":2780,"mtime":1606454389071,"results":"10","hashOfConfig":"9"},{"size":5867,"mtime":1606402805278,"results":"11","hashOfConfig":"9"},{"size":4647,"mtime":1606315124853,"results":"12","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"9"},{"size":4985,"mtime":1606456495151,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"wl106z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\issue-reporting\\client\\src\\components\\IssueList.js",["34","35","36","37","38","39","40","41","42","43","44"],"import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport $ from 'jquery';\r\n\r\nexport default function listIssue() {\r\n    return (\r\n        <form>\r\n            <div class=\"card\">\r\n                <h3 class=\"card-header text-center font-weight-bold text-uppercase py-4\">REPORTED ISSUES</h3>\r\n                <div class=\"card-body\">\r\n                    <div id=\"table\" class=\"table-editable\">\r\n                        <span class=\"table-add float-right mb-3 mr-2\"><a href=\"#!\" class=\"text-success\"><i class=\"fas fa-plus fa-2x\" aria-hidden=\"true\"></i></a></span>\r\n                        <table class=\"table table-bordered table-responsive-md table-striped text-center\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\">Status</th>\r\n                                    <th class=\"text-center\">Issue Time</th>\r\n                                    <th class=\"text-center\">Description</th>\r\n                                    <th class=\"text-center\">Steps To Re-Produce Issue</th>\r\n                                    <th class=\"text-center\">Issue Occured Date</th>\r\n                                    <th class=\"text-center\">Photo / Video</th>\r\n                                    <th class=\"text-center\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><span class=\"table-remove\"><button type=\"button\" class=\"btn btn-success btn-rounded btn-sm my-0\">OPEN</button></span></td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">30</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Deepends</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Spain</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Madrid</td>\r\n                                    <td class=\"pt-3-half\">\r\n                                        <span class=\"table-up\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-up\" aria-hidden=\"true\"></i></a></span>\r\n                                        <span class=\"table-down\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-down\" aria-hidden=\"true\"></i></a></span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"table-remove\"><button type=\"button\" class=\"btn btn-danger btn-rounded btn-sm my-0\">Remove</button></span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Guerra Cortez</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">45</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Insectus</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">USA</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">San Francisco</td>\r\n                                    <td class=\"pt-3-half\">\r\n                                        <span class=\"table-up\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-up\"\r\n                                            aria-hidden=\"true\"></i></a></span>\r\n                                        <span class=\"table-down\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-down\"\r\n                                            aria-hidden=\"true\"></i></a></span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"table-remove\"><button type=\"button\"\r\n                                            class=\"btn btn-danger btn-rounded btn-sm my-0\">Remove</button></span>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Guadalupe House</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">26</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Isotronic</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Germany</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Frankfurt am Main</td>\r\n                                    <td class=\"pt-3-half\">\r\n                                        <span class=\"table-up\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-up\"\r\n                                            aria-hidden=\"true\"></i></a></span>\r\n                                        <span class=\"table-down\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-down\"\r\n                                            aria-hidden=\"true\"></i></a></span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"table-remove\"><button type=\"button\"\r\n                                            class=\"btn btn-danger btn-rounded btn-sm my-0\">Remove</button></span>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr class=\"hide\">\r\n                                    <td><span class=\"table-remove\"><button type=\"button\" class=\"btn btn-danger btn-rounded btn-sm my-0\">Remove</button></span></td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">31</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">Portica</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">United Kingdom</td>\r\n                                    <td class=\"pt-3-half\" contenteditable=\"true\">London</td>\r\n                                    <td class=\"pt-3-half\">\r\n                                        <span class=\"table-up\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-up\"\r\n                                            aria-hidden=\"true\"></i></a></span>\r\n                                        <span class=\"table-down\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-down\"\r\n                                            aria-hidden=\"true\"></i></a></span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"table-remove\"><button type=\"button\"\r\n                                            class=\"btn btn-danger btn-rounded btn-sm my-0\">Remove</button></span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { DropdownList } from 'react-widgets';\r\n// import BootstrapTable from 'reactjs-bootstrap-table';\r\n// import Logger from 'simple-console-logger';\r\n// // import { selectionFromString } from '../util';\r\n// import Notifier from 'react-bs-notifier';\r\n\r\n// const log = Logger.getLogger(\"PageOne\");\r\n\r\n// function noop() {} // get rid of warnings about checkbox change handler\r\n\r\n// class ListIssue extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.onChange = this.onChange.bind(this);\r\n//     this.onShowHeader = this.onShowHeader.bind(this);\r\n//     this.onAutoResize = this.onAutoResize.bind(this);\r\n//     this.setSelected = this.setSelected.bind(this);\r\n//     this.changeTableClass = this.changeTableClass.bind(this);\r\n//     this.changeActiveClass = this.changeActiveClass.bind(this);\r\n//     this.onKeyPress = this.onKeyPress.bind(this);\r\n//     this.onSelectType = this.onSelectType.bind(this);\r\n//     this.onClickLink = this.onClickLink.bind(this);\r\n//     this.onDismissAlert = this.onDismissAlert.bind(this);\r\n//     this.onSort = this.onSort.bind(this);\r\n//     this.onChangeSelectText = this.onChangeSelectText.bind(this);\r\n//   }\r\n\r\n//   onSort(col, dir) {\r\n//     log.debug('onSort: ' + col + ' ' + dir);\r\n//     this.props.sort(col, dir);\r\n//   }\r\n\r\n//   onDismissAlert(alert) {\r\n//     this.props.dismissAlert(alert.id);\r\n//   }\r\n\r\n//   onClickLink(row) {\r\n//     const message =\r\n//     'You clicked item ' + row.id + ' random number ' + row.rand +\r\n//     '. This column has a renderer that displays a link with ' +\r\n//     'style bst-no-select so that clicking it does not change the selection.';\r\n//     this.props.showAlert(message, row.id);\r\n//   }\r\n\r\n//   onSelectType(value) {\r\n//     log.debug('select type: ' + value);\r\n//     this.props.setSelectType(value);\r\n//   }\r\n\r\n//   changeTableClass(val) {\r\n//     this.props.setTableClass(val);\r\n//   }\r\n\r\n//   changeActiveClass(val) {\r\n//     this.props.setActiveClass(val);\r\n//   }\r\n\r\n//   onKeyPress(e) {\r\n//     if (e.key === 'Enter') {\r\n//       this.setSelected();\r\n//     }\r\n//   }\r\n\r\n//   setSelected() {\r\n//     if (this.refs.selectedInput) {\r\n//       log.debug('setSelected: ' + this.refs.selectedInput.value);\r\n//       let newSelection = selectionFromString(this.refs.selectedInput.value);\r\n//       this.props.setSelected(newSelection);\r\n//     }\r\n//   }\r\n\r\n//   onShowHeader(e) {\r\n//     log.debug('onShowHeader: ' + e.target.checked);\r\n//     this.props.showHeader(e.target.checked);\r\n//   }\r\n\r\n//   onAutoResize(e) {\r\n//     log.debug('onAutoResize: ' + e.target.checked);\r\n//     this.props.autoResize(e.target.checked);\r\n//   }\r\n\r\n//   onChangeSelectText(e) {\r\n//     log.debug('onChangeSelectText: ' + e.target.checked);\r\n//     this.props.setDisableSelectText(e.target.checked);\r\n//   }\r\n\r\n//   onChange(newSelection) {\r\n//     this.props.setSelected(newSelection);\r\n//   }\r\n\r\n//   render() {\r\n//     let resize = null;\r\n//     if (this.props.options.resize) {\r\n//       resize = {extra: 0, minSize: 200, elements: ['header', 'footer']};\r\n//     }\r\n//     log.debug('resize option is ' + resize);\r\n\r\n//     let select = [\r\n//       'none',\r\n//       'single',\r\n//       'multiple'\r\n//     ];\r\n\r\n//     let tableClass = [\r\n//       'table',\r\n//       'table table-hover',\r\n//       'table table-bordered table-hover',\r\n//       'table table-bordered table-hover table-condensed',\r\n//     ];\r\n\r\n//     let activeClass = [\r\n//       'active',\r\n//       'info',\r\n//       'success',\r\n//       'warning'\r\n//     ];\r\n\r\n//     let columns = [\r\n//       { name: 'id', display: 'ID', width: 1 },\r\n//       { name: 'col1', display: 'Column One' },\r\n//       { name: 'col2', display: 'Column Two' },\r\n//       { name: 'col3', display: 'Column Three' },\r\n//       { name: 'rand', display: 'Random (sortable, clickable)', sort: true, renderer: (row) => {\r\n//         return (\r\n//           <a className=\"bst-no-select\" href=\"#\" onClick={this.onClickLink.bind(this, row)}>\r\n//             {row.rand}\r\n//           </a>\r\n//         );\r\n//       }}\r\n//     ];\r\n\r\n//     let footer = '';\r\n//     if (this.props.data.length) {\r\n//       footer =\r\n//         <div className=\"well\" id=\"footer\" style={{marginTop: '-20px', fontWeight: 'bold'}}>\r\n//             <span style={{color:'green'}}>Selected:</span> {this.props.selectedCount}\r\n//           <button className=\"btn btn-primary pull-right\" style={{display: 'inline-block', marginTop: -5}}\r\n//               onClick={this.props.clearSelection}>\r\n//             Clear Selection\r\n//           </button>\r\n//           <div style={{height: 1}}></div>\r\n//         </div>\r\n//     }\r\n\r\n//     let buttonsDisabled = false;\r\n//     if (this.props.selectedCount == 0) buttonsDisabled = true;\r\n\r\n//     return (\r\n//       <div>\r\n//         <Notifier alerts={this.props.alerts} timeout={5000} onDismiss={this.onDismissAlert} />\r\n//         <div className=\"row\" id=\"header\">\r\n//           <div className=\"col-md-12 well\">\r\n\r\n//             <h3>Demo for <span style={{color:'green'}}>reactjs-bootstrap-table</span></h3>\r\n//             <a href=\"https://github.com/raythree/reactjs-bootstrap-table-demo\" target=\"_blank\">Code is here.</a>\r\n//             <div className=\"row\">\r\n//               <div className=\"col-md-4\">\r\n//                 <label>select</label>\r\n//                 <DropdownList data={select} defaultValue={this.props.options.select} onChange={this.onSelectType}/>\r\n//               </div>\r\n//               <div className=\"col-md-4\">\r\n//                 <label>tableClass</label>\r\n//                 <DropdownList data={tableClass} defaultValue={this.props.options.tableClass}\r\n//                     onChange={this.changeTableClass}/>\r\n//               </div>\r\n//               <div className=\"col-md-4\">\r\n//                 <label>activeClass (selected)</label>\r\n//                 <DropdownList data={activeClass} defaultValue={this.props.options.activeClass}\r\n//                   onChange={this.changeActiveClass}/>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"row\">\r\n//               <div className=\"col-md-4\">\r\n//                 <div className=\"checkbox\">\r\n//                   <label>\r\n//                     <input type=\"checkbox\" checked={this.props.options.headers}\r\n//                       onClick={this.onShowHeader} onChange={noop}/>\r\n//                     Show Column Headers\r\n//                   </label>\r\n//                 </div>\r\n//                 <div className=\"checkbox\">\r\n//                   <label>\r\n//                     <input type=\"checkbox\" checked={this.props.options.resize}\r\n//                       onClick={this.onAutoResize} onChange={noop}/>\r\n//                     Auto Resize to fit\r\n//                   </label>\r\n//                 </div>\r\n//                 <div className=\"checkbox\">\r\n//                   <label>\r\n//                     <input type=\"checkbox\" checked={this.props.options.disableSelectText}\r\n//                       onClick={this.onChangeSelectText} onChange={noop}/>\r\n//                     Disable Text Select\r\n//                   </label>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div className=\"col-md-4\">\r\n//                 <div style={{fontWeight: 'bold', marginTop: '1em', marginBottom: '1em'}}>\r\n//                   <span style={{color:'green'}}>Total:</span> {this.props.data.length},\r\n//                   <span style={{color:'green'}}>\r\n//                     <span /> Selected:\r\n//                   </span> {this.props.selectedCount}\r\n//                 </div>\r\n//                 <div>\r\n//                   <button className=\"btn btn-primary\" style={{marginRight:'1em'}} disabled={buttonsDisabled}\r\n//                       onClick={this.props.clearSelection}>\r\n//                     Clear Selected\r\n//                   </button>\r\n//                   <button className=\"btn btn-warning\" onClick={this.props.deleteSelected} disabled={buttonsDisabled}>\r\n//                     <span className=\"glyphicon glyphicon-remove\"></span> Delete\r\n//                   </button>\r\n//                   <button className=\"btn btn-default\" style={{marginLeft:'1em'}} onClick={this.props.reloadData}>\r\n//                     Reload Data\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div className=\"col-md-4\" style={{padingRight: 30}}>\r\n//                 <div style={{marginTop: '1em', marginBottom: '1em', fontWeight: 'bold'}}>Programmatic Selection: </div>\r\n//                 <div className=\"input-group\">\r\n//                   <input type=\"text\" className=\"form-control\" ref=\"selectedInput\" onKeyPress={this.onKeyPress}\r\n//                     placeholder=\"Enter ID values separated by spaces ...\"/>\r\n//                   <span className=\"input-group-btn\">\r\n//                     <button className=\"btn btn-secondary\" onClick={this.setSelected} type=\"button\">Select</button>\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//             </div>\r\n\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"row\">\r\n//           <div className=\"col-md-12\">\r\n\r\n//             <BootstrapTable data={this.props.data}\r\n//               headers={this.props.options.headers}\r\n//               select={this.props.options.select}\r\n//               tableClass={this.props.options.tableClass}\r\n//               disableSelectText={this.props.options.disableSelectText}\r\n//               activeClass={this.props.options.activeClass}\r\n//               resize={resize}\r\n//               selected={this.props.selected}\r\n//               onChange={this.onChange}\r\n//               onSort={this.onSort}\r\n//               columns={columns}>\r\n\r\n//               <div style={{margin: '3em', border: '1px solid gray', padding: '1em'}} className=\"well well-success\">\r\n//                 <p>This DIV is shown when there is no data in the table. When empty the table renders\r\n//                 the child element of the table.</p>\r\n//                 <p>Click Reload Data to load new data.</p>\r\n//               </div>\r\n\r\n//             </BootstrapTable>\r\n\r\n//             {footer}\r\n\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// PageOne.propTypes = { data: React.PropTypes.array };\r\n// PageOne.defaultProps = { data: [] };\r\n\r\n// export default  ListIssue;","E:\\issue-reporting\\client\\src\\App.js",["45"],"E:\\issue-reporting\\client\\src\\components\\CreateNewIssue.js",["46","47"],"import React, { useState } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { ToastProvider, useToasts } from 'react-toast-notifications'\r\n\r\nexport default function ReportIssue() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n    const [issueCategory, setIssueCategory] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [reproduceIssue, setReproduceIssue] = useState(\"\");\r\n    const [issueOccuredDate, setIssueOccuredDate] = useState(new Date());\r\n    \r\n    const saveNewIssue = () => {\r\n        var issuesList = [];\r\n        issuesList = localStorage.getItem(\"issuesList\");\r\n        if(issuesList == null){\r\n            issuesList = [];\r\n            issuesList.push({\r\n                \"email\": email,\r\n                \"severity\": severity,\r\n                \"issueCategory\": issueCategory,\r\n                \"description\": description,\r\n                \"reproduceIssue\": reproduceIssue,\r\n                \"issueOccuredDate\": issueOccuredDate\r\n            })\r\n        }else{\r\n            issuesList = JSON.parse(issuesList);\r\n            issuesList.push({\r\n                \"email\": email,\r\n                \"severity\": severity,\r\n                \"issueCategory\": issueCategory,\r\n                \"description\": description,\r\n                \"reproduceIssue\": reproduceIssue,\r\n                \"issueOccuredDate\": issueOccuredDate\r\n            })\r\n        }\r\n        localStorage.setItem(\"issuesList\", JSON.stringify(issuesList));\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\" style={{ 'max-width': '1300px' }}>\r\n            <div class=\"card\">\r\n                <h5 class=\"card-header text-center\">REPORT NEW ISSUE</h5>\r\n                <div class=\"card-body\">\r\n                    <form>\r\n                        <div class=\"form-row\">\r\n                            <div class=\"form-group required col-md-4\">\r\n                                <label for=\"exampleFormControlInput1\" class=\"control-label\">Email address</label>\r\n                                <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" onChange={(e) => { setEmail(e.target.value); }}/>\r\n                            </div>\r\n                            <div class=\"form-group required col-md-4\">\r\n                                <label for=\"exampleFormControlSelect1\">Severity</label>\r\n                                <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e) => { setSeverity(e.target.value); }}>\r\n                                    <option>HIGH</option>\r\n                                    <option>MEDIUM</option>\r\n                                    <option>LOW</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"form-group required col-md-4\">\r\n                                <label for=\"exampleFormControlSelect1\">Issue Category</label>\r\n                                <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e) => { setIssueCategory(e.target.value); }}>\r\n                                    <option>BUG-1</option>\r\n                                    <option>BUG-2</option>\r\n                                    <option>BUG-3</option>\r\n                                    <option>BUG-4</option>\r\n                                    <option>BUG-5</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-row\">\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"exampleFormControlFile1\" class=\"control-label\">Upload Photo / Video </label>\r\n                                <input type=\"file\" multiple class=\"form-control-file\" name=\"photo\" />\r\n                            </div>\r\n                            <div class=\"form-group required  col-md-3\">\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label for=\"inputPassword4\" class=\"control-label\">Issue Faced At?</label><br />\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <DatePicker\r\n                                    placeholderText=\"Issue Faced At ?\"\r\n                                    selected={issueOccuredDate}\r\n                                    onChange={date => setIssueOccuredDate(date)}\r\n                                    timeInputLabel=\"Time:\"\r\n                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                                    showTimeInput\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group required\">\r\n                            <label for=\"exampleFormControlTextarea1\" class=\"control-label\">Issue description</label>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" onChange={(e) => { setDescription(e.target.value); }}></textarea>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleFormControlTextarea1\">Steps To Re-Produce Issue</label>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" onChange={(e) => { setReproduceIssue(e.target.value); }}></textarea>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"card-footer text-muted\">\r\n                    <button type=\"submit\" onClick={saveNewIssue} class=\"btn btn-primary\">CREATE ISSUE</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}",["48","49"],"E:\\issue-reporting\\client\\src\\components\\IssuesList.js",["50"],"import React from 'react';\r\nimport '../css/App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\nimport \"datatables.net-dt/js/dataTables.dataTables\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\n\r\nimport $ from 'jquery';\r\n\r\nclass IssuesList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            issues: [],\r\n            loading: true,\r\n            show: false\r\n        };\r\n    }\r\n\r\n    async getIssuesListData() {\r\n        const res = [];\r\n        this.setState({ loading: false, issues: res.data });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getIssuesListData().then(() => this.syncTable());\r\n    }\r\n\r\n    syncTable() {\r\n        this.$el = $(this.el);\r\n        this.$el.DataTable({\r\n            data: this.state.issues,\r\n            columns: [\r\n                { title: \"STATUS\", data: \"FIRST_NAME\" },\r\n                { title: \"ISSUE TYPE\", data: \"LAST_NAME\" },\r\n                { title: \"ISSUE OCCURED DATE\", data: \"EMAIL\" },\r\n                { title: \"DESCRIPTION\", data: \"DATE_FORMATTED\" },\r\n                { title: \"STEP'S TO REPRODUCE ISSUE\", data: \"AGE\" },\r\n                { title: \"ACTION\", data: \"EDIT\" }\r\n            ],\r\n            lengthMenu: [[5, 10, 15, -1], [5, 10, 15, \"All\"]]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div class=\"card\">\r\n                    <h3 class=\"card-header text-center font-weight-bold text-uppercase py-4\">REPORTED ISSUES</h3>\r\n                    <div class=\"card-body\">\r\n                        <div id=\"table\" class=\"table-editable\">\r\n                            <span class=\"table-add float-right mb-3 mr-2\"><a href=\"#!\" class=\"text-success\"><i class=\"fas fa-plus fa-2x\" aria-hidden=\"true\"></i></a></span>\r\n                            {/* <table id=\"issuesList\" class=\"table table-bordered table-responsive-md table-striped text-center\" ref={(el) => (this.el = el)}> */}\r\n                            <table id=\"issuesList\" class=\"table table-bordered table-responsive-md table-striped text-center\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center\">Status</th>\r\n                                    <th class=\"text-center\">Issue Occured Date</th>\r\n                                    <th class=\"text-center\">Description</th>\r\n                                    <th class=\"text-center\">Steps To Re-Produce Issue</th>\r\n                                    <th class=\"text-center\">Photo / Video</th>\r\n                                    <th class=\"text-center\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                    <td><span class=\"table-remove\"><button type=\"button\" class=\"btn btn-primary btn-rounded btn-sm my-0\">OPEN</button></span></td>\r\n                                    <td class=\"pt-3-half\">2020-11-25 11:12 AM</td>\r\n                                    <td class=\"pt-3-half\">Unable to report issue</td>\r\n                                    <td class=\"pt-3-half\"> -- </td>\r\n                                    <td class=\"pt-3-half\"> </td>\r\n                                    <td>\r\n                                        <span class=\"table-remove\"><button type=\"button\" class=\"btn btn-danger btn-rounded btn-sm my-0\">DELETE</button></span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td><span class=\"table-remove\"><button type=\"button\" class=\"btn btn-success btn-rounded btn-sm my-0\">CLOSED</button></span></td>\r\n                                    <td class=\"pt-3-half\">2020-11-20 11:12 AM</td>\r\n                                    <td class=\"pt-3-half\">Unable to save the issue</td>\r\n                                    <td class=\"pt-3-half\">----</td>\r\n                                    <td class=\"pt-3-half\"> </td>\r\n                                    <td>\r\n                                        <span class=\"table-remove\"><button type=\"button\"\r\n                                            class=\"btn btn-danger btn-rounded btn-sm my-0\">DELETE</button></span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default IssuesList;","E:\\issue-reporting\\client\\src\\reportWebVitals.js",[],"E:\\issue-reporting\\client\\src\\index.js",[],"E:\\issue-reporting\\client\\src\\components\\AdminsIssueList.js",["51","52"],{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"53","severity":1,"message":"57","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":9},{"ruleId":"58","severity":1,"message":"59","line":12,"column":71,"nodeType":"60","endLine":12,"endColumn":105},{"ruleId":"58","severity":1,"message":"59","line":33,"column":64,"nodeType":"60","endLine":33,"endColumn":97},{"ruleId":"58","severity":1,"message":"59","line":34,"column":66,"nodeType":"60","endLine":34,"endColumn":99},{"ruleId":"58","severity":1,"message":"59","line":47,"column":64,"nodeType":"60","endLine":47,"endColumn":97},{"ruleId":"58","severity":1,"message":"59","line":49,"column":66,"nodeType":"60","endLine":49,"endColumn":99},{"ruleId":"58","severity":1,"message":"59","line":65,"column":64,"nodeType":"60","endLine":65,"endColumn":97},{"ruleId":"58","severity":1,"message":"59","line":67,"column":66,"nodeType":"60","endLine":67,"endColumn":99},{"ruleId":"58","severity":1,"message":"59","line":83,"column":64,"nodeType":"60","endLine":83,"endColumn":97},{"ruleId":"58","severity":1,"message":"59","line":85,"column":66,"nodeType":"60","endLine":85,"endColumn":99},{"ruleId":"61","severity":1,"message":"62","line":17,"column":7,"nodeType":"55","messageId":"63","endLine":17,"endColumn":21},{"ruleId":"53","severity":1,"message":"64","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":23},{"ruleId":"53","severity":1,"message":"65","line":4,"column":25,"nodeType":"55","messageId":"56","endLine":4,"endColumn":34},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"58","severity":1,"message":"59","line":53,"column":75,"nodeType":"60","endLine":53,"endColumn":109},{"ruleId":"58","severity":1,"message":"59","line":53,"column":75,"nodeType":"60","endLine":53,"endColumn":109},{"ruleId":"70","severity":1,"message":"71","line":70,"column":60,"nodeType":"60","endLine":70,"endColumn":72},"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-redeclare","'dashboardClass' is already defined.","redeclared","'ToastProvider' is defined but never used.","'useToasts' is defined but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]